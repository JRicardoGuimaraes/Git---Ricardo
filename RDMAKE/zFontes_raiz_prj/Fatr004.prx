#include "rwmake.ch"        
#IFNDEF WINDOWS
	#DEFINE PSAY SAY
#ENDIF

User Function fatr004()     
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ Fatr004  ³ Autor ³ Saulo Muniz           ³ Data ³ 17/02/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Compras Gefco                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Alteracao ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis de Objeto                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Private oFont, cCode
nHeight:=15
lBold:= .F.
lUnderLine:= .F.
lPixel:= .T.
lPrint:=.F.
nSedex := 1

oFont := TFont():New( "Arial",,nHeight,,lBold,,,,,lUnderLine )
oFont3:= TFont():New( "Arial",,12,,.t.,,,,,.f. )
oFont5:= TFont():New( "Arial",,10,,.f.,,,,,.f. )
oFont9:= TFont():New( "Arial",,8,,.f.,,,,,.f. )

//mfont5:= TFont():New( "Times New Roman",,10,,.f.,,,,,.f. )
mfont5:= TFont():New( "Times New Roman",,10,,.t.,,,,,.f. )
nFont5:= TFont():New( "Times New Roman",,10,,.t.,,,,,.f. )
mFont9:= TFont():New( "Times New Roman",,8,,.f.,,,,,.f. )
nFont9:= TFont():New( "Times New Roman",,8,,.t.,,,,,.f. )
nFont5:= TFont():New( "Times New Roman",,12,,.t.,,,,,.f. )

oFont1:= TFont():New( "Times New Roman",,28,,.t.,,,,,.t. )
oFont2:= TFont():New( "Times New Roman",,14,,.t.,,,,,.f. )
oFont4:= TFont():New( "Times New Roman",,20,,.t.,,,,,.f. )
oFont7:= TFont():New( "Times New Roman",,18,,.t.,,,,,.f. )
oFont11:=TFont():New( "Times New Roman",,18,,.t.,,,,,.t. )

oFont6:= TFont():New( "HAETTENSCHWEILLER",,10,,.t.,,,,,.f. )

oFont8:=  TFont():New( "Free 3 of 9",,44,,.t.,,,,,.f. )
oFont10:= TFont():New( "Free 3 of 9",,38,,.t.,,,,,.f. )

oPrn := TMSPrinter():New()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Ambientais                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

cbTxt     := ""
cbCont    := ""
nOrdem    := 0
Tamanho   := "G" 
Limite    := 220
cImpri    := cImpri1 := cImpri2 := cImpri3 := cImpri4 := cImpri5 := cImpri6 := " "
cImpri7   := cImpri8 := cImpri9 := ""
Titulo    := PadC(OemToAnsi("Relatorio de Compras Gefco"),74)
cDesc1    := PadC(OemToAnsi("Este programa ira emitir as Compras, conforme"),74)
cDesc2    := PadC(OemToAnsi("os parametros solicitados"),74)
cDesc3    := PadC(OemToAnsi(""),74)
aReturn   := { "Zebrado", 1,"Administracao", 1, 2, 1, "", 1 } 
NomeProg  := "ORCFAT" 
cPerg     := "ORCFAT"
nLastKey  := 0 
lContinua := .T.
nLin      := 80
xPag      := 1
wnrel     := "ORCFAT"   
* Caracteres de moldura
li := "-"     && linha
la := "|"     && lateral
csd := " "    && canto superior direito
cse := " "    && canto superior esquerdo
cid := " "    && canto inferior direito
cie := " "    && canto inferior esquerdo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                         ³
//³ mv_par01               Tipo do Orcamento                     ³
//³ mv_par02               Tipo de Frete                         ³
//³ mv_par03               Data base do calculo                  ³
//³ mv_par04               Data de Apresentacao so para Vedacao  ³
//³ mv_par05               Qtde de dias da emissao p/ Validade   ³
//³ mv_par06               Complemento da Condicao de Pagamento  ³
//³ mv_par07               ICM Incluso/ Excluso do Preco         ³
//³ mv_par09               Listar IPI? 1=sim/2=nao               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas, busca o padrao da Nfiscal           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//fParOrc()

Pergunte(cPerg,.F.)

cString:="CTS"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel:=SetPrint(cString,NomeProg,cPerg,Titulo,cDesc1,cDesc2,cDesc3,.F.,,,,,.F.)
If ( nLastKey == 27 .Or. LastKey() == 27 )
   Return(.F.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica Posicao do Formulario na Impressora                 ³          
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetDefault(aReturn,cString)
If ( nLastKey == 27 .Or. LastKey() == 27 )
   Return(.F.)
Endif

RptStatus({|| RptDetail()})

Return


Static Function RptDetail()
//*************************

// Declaracao de variaveis utilizadas na Impressao
_cCab1   := "GEFCO LOGISTICA DO BRASIL   L T D A"
_cCab2   := "Praça XV de Novembro 20, 4 Andar"
_cCab3   := "CEP: 22020-010 Fone: (21)2103-8110 Faxes: (21)2103-8100 / (21)2103-8100"
_cCab4   := "Site: www.gefco.com.br"
_cClient := ""
_cPropos := ""
_cMunici := ""
_cEstado := ""
_cCEP    := ""
_cContat := ""
_cFone   := ""
_cFax    := ""
_cVended := ""
_cCotCli := ""
_dAprese := ctod(space(08))
_dEmissa := ctod(space(08))
_mItens  := {}
_cICM    := ""
_cPagto  := ""
_cEntreg := ""
_cBaseCa := ""
_cValida := ""
_cTxtICM := ""
_cReajus := ""
_mNotas  := {}
_cUsuari := ""    
_nTotal  := 0

//Impressao
ini  := 100 //20
nLin := 200
int  := 50
lim  := 10 
limfol := 2200  
_quebra := 0
FolhaNova := .F.


dbSelectArea("SZ2")
dbSetOrder(1) // 1
dbGoTop()
Dbseek(xFilial("SZ2")+Alltrim(MV_PAR05))
SetRegua(RecCount())

oPrn:StartPage()

/*
"SAY"         - Imprime o Texto
       	    	uPar01 - Linha a Imprimir   (N)
			    uPar02 - Coluna a Imprimir  (N)
 				uPar03 - Texto              (C)
			    uPar04 - Fonte a imprimir o texto (N)    ==> ESTE NUMERO E' O NUMERO RETORNADO QUANDO SE CRIA UMA FONTE
			    uPar05 - Tamanho do Texto (usado no caso de centralizar ou alinhar a direita) (N)
			    uPar06 - Cor do Texto       (N)
			    uPar07 - Cor do Fundo 1-transparante   2-Opaco   (N)
			    uPar08 - Posicao do texto, 0-Esquerda (default)   1-Direita     2-Centralizado (N)
*/

While !EOF() //.And. Alltrim(SZ2->Z2_COD) ==  Alltrim(MV_PAR05) 

    //oPrn:Say(nLin,ini,"Descrição : ",nFont5,100)
	//oPrn:Say(nLin,ini+250,Alltrim(SZ2->Z2_DESCR),mfont5,400)
	oPrn:Say(nLin,ini,Alltrim(SZ2->Z2_DESCR),oFont6,100)
	//oPrn:Say(nLin,ini,nVlForaSede,mfont5,400)
	oPrn:Say(nLin,ini+600,Str(SZ2->Z2_SEDEADM),oFont6,200)
	oPrn:Say(nLin,ini+800,Str(SZ2->Z2_PORTORJ),oFont6,300)
	oPrn:Say(nLin,ini+1000,Str(SZ2->Z2_RIO),oFont6,400)
	oPrn:Say(nLin,ini+1200,Str(SZ2->Z2_PREAL),oFont6,400)
	oPrn:Say(nLin,ini+1400,Str(SZ2->Z2_BARUERI),oFont6,400)
	oPrn:Say(nLin,ini+1600,Str(SZ2->Z2_CAXIAS),oFont6,400)
	oPrn:Say(nLin,ini+1800,Str(SZ2->Z2_VILAGUI),oFont6,400)
	oPrn:Say(nLin,ini+2000,Str(SZ2->Z2_SJP),oFont6,400)
	//oPrn:Say(nLin,ini,Str(SZ2->Z2_CAMPINA),mfont5,400)
	//oPrn:Say(nLin,ini,Str(SZ2->Z2_SEPETIB),mfont5,400)
	//oPrn:Say(nLin,ini,Str(SZ2->Z2_STAMARO),mfont5,400)
	//oPrn:Say(nLin,ini,Str(SZ2->Z2_SANTOS),mfont5,400)
	//oPrn:Say(nLin,ini,Str(SZ2->Z2_CONTAGE),mfont5,400)

	nLin := nLin + int

    Dbskip()

Enddo

nLin := nLin + int

/*      

   @nLin,001 PSAY Alltrim(SZ2->Z2_DESCR)
   @nLin,022 PSAY nVlForaSede     Picture "@E 9,999,999.99"                     
   @nLin,036 PSAY SZ2->Z2_SEDEADM Picture "@E 9,999,999.99"                     
   @nLin,049 PSAY SZ2->Z2_PORTORJ Picture "@E 9,999,999.99"     //58                    
   @nLin,064 PSAY SZ2->Z2_RIO     Picture "@E 9,999,999.99"                         
   @nLin,079 PSAY SZ2->Z2_PREAL   Picture "@E 9,999,999.99"                         
   @nLin,094 PSAY SZ2->Z2_BARUERI Picture "@E 9,999,999.99"                             
   @nLin,109 PSAY SZ2->Z2_CAXIAS  Picture "@E 9,999,999.99"                     
   @nLin,124 PSAY SZ2->Z2_VILAGUI Picture "@E 9,999,999.99"                     
   @nLin,139 PSAY SZ2->Z2_SJP     Picture "@E 9,999,999.99"                     
   @nLin,154 PSAY SZ2->Z2_CAMPINA Picture "@E 9,999,999.99"                         
   @nLin,169 PSAY SZ2->Z2_SEPETIB Picture "@E 9,999,999.99"                         
   @nLin,184 PSAY SZ2->Z2_STAMARO Picture "@E 9,999,999.99"                         
   @nLin,199 PSAY SZ2->Z2_SANTOS  Picture "@E 9,999,999.99"                             
   @nLin,214 PSAY SZ2->Z2_CONTAGE Picture "@E 9,999,999.99"                  
  
*/

ImpLogo()
         
oPrn:EndPage()

If aReturn[5] == 1  //1-Disco, 2-Impressora
	oPrn:Preview()
Else
	oPrn:Setup()
	oPrn:Print()
Endif

MS_FLUSH()

Return

Static Function ImpLogo()
//***********************

cBitMap1 := "msmdilogo.bmp" 
cBitMap2 := cBitMap1
oPrn:Say(nLin,20," ",oFont,100)
oPrn:SayBitmap(30,30,cBitmap1,600,150) // original largura 600 altura 150 //100-100
//oPrn:SayBitmap(10,2800,cBitmap2,274,200) //200

nLin := nLin + int 
oPrn:Say(nLin,ini+650,_cCab1,nFont9,100)//400
nLin := nLin + int - 20 
oPrn:Say(nLin,ini+650,_cCab2,oFont9,100)
nLin := nLin + int - 20
oPrn:Say(nLin,ini+650,_cCab3,oFont9,100)
nLin := nLin + int - 20
oPrn:Say(nLin,ini+650,_cCab4,oFont9,100)
nLin := nLin + int 
Return

Static Function ImpCabCli()
//*************************                

oPrn:Box(nLin,ini-10,nLin+(5*int),3150)
nLin := nLin + int
nLin := nLin - 10
oPrn:Say(nLin,ini," Cliente: "+_cClient,mfont5,100)
oPrn:Say(nLin,2400,"PROPOSTA N. "+ _cPropos,nFont5,100) //2000
nLin := nLin + int
oPrn:Say(nLin,ini," Municipio: "+_cMunici+"          Estado: "+_cEstado+"          CEP: "+_cCEP,mfont5,100)
nLin := nLin + int 
oPrn:Say(nLin,ini," Contato: "+AllTrim(_cContat)+"     Fone: "+_cFone+"     Fax: "+_cFax+"     Vendedor: "+_cVended,mfont5,100)
nLin := nLin + int
oPrn:Say(nLin,ini," Solicitacao de Cotacao n. "+_cCotCli+"          Data de Apresentacao: "+Dtoc(_dAprese)+"          Data de Emissao: "+Dtoc(_dEmissa),mfont5,100)
nLin := nLin +( 2*int)+10
Return

Static Function ImpCabIte()
//*************************

oPrn:Say(nLin,ini,"Estamos fornecendo abaixo, precos e demais condicoes dos itens:",mfont5,100)
nLin := nLin + int
oPrn:Box(nLin,ini-10,nLin+(2*int),3150)
nLin := nLin + int-10
oPrn:Say(nLin,ini,     "Item"       ,nFont5,100)
oPrn:Say(nLin,ini+0150,"Qtde"       ,nFont5,100)
oPrn:Say(nLin,ini+0350,"Un"         ,nFont5,100) //400
oPrn:Say(nLin,ini+0440,"Descricao"  ,nFont5,100) //540
oPrn:Say(nLin,ini+1120,"Cod.Cliente",nFont5,100) //1270
oPrn:Say(nLin,ini+1600,"Cod.Selco"  ,nFont5,100) //1750
oPrn:Say(nLin,ini+1950,"Prazo"      ,nFont5,100)  //2200
oPrn:Say(nLin,ini+2150,"Unit.R$"    ,nFont5,100)
oPrn:Say(nLin,ini+2480,"Total R$"   ,nFont5,100)
oPrn:Say(nLin,ini+2750,"IPI%"       ,nFont5,100)
oPrn:Say(nLin,ini+2890,"Cl.Fis."    ,nFont5,100) // alexandre
nLin := nLin + int+10
Return

Static Function ImpItens()
//************************
num := len(_mitens)
_pri := .T.
_folhanova := .F.
_limenor := 10
_limaior := 30  
ini  := 70 //20
nLin := 20
int  := 50          
_lininf := 0

for i:= 1 to num
   		numite := num - i + 1
		If _pri .or. _folhanova
			If _folhanova
				nLin := nLin + (2 * int)
				oPrn:Say(nLin,2800,"Continua...",mfont5,100)
				oPrn:EndPage()
				oPrn:StartPage()
				_folhanova := .F.
			Endif
			nLin := 20
			ImpLogo()
			ImpCabCli()
			ImpCabIte()           
		if numite <= _limenor
			_lininf := nLin+((_limenor+1)*int)
		elseif numite > _limenor .and. numite <= _limaior
			_lininf := nLin+((numite+1)*int)
		elseif numite > _limaior
			_lininf := nLin+((_limaior+1)*int)
		endif
		oPrn:Box(nLin,ini-10,_lininf,3150)
		_pri = .F.
	Endif
	nLin := nLin + int
	oPrn:Say(nLin,ini,_mItens[i,1],mfont5,100)
	oPrn:Say(nLin,ini+0100,transform(_mItens[i,2],"@E 999999.99"),mfont5) //,100) 160
	oPrn:Say(nLin,ini+0350,_mItens[i,3],mfont5)  //,100) 350
	oPrn:Say(nLin,ini+0440,_mItens[i,4],mfont5) //,100) 440
	oPrn:Say(nLin,ini+1120,_mItens[i,5],mfont5) //,100) 1170
	oPrn:Say(nLin,ini+1600,_mItens[i,6]	,mfont5) //,100) 1750
	oPrn:Say(nLin,ini+1950,transform(_mItens[i,7],"99999"),mfont5) //,100) 2200
	oPrn:Say(nLin,ini+2130,transform(_mItens[i,8],"@E 9999,999.99"),mfont5) //,100)
	oPrn:Say(nLin,ini+2420,transform(_mItens[i,9],"@E 999,999,999.99"),mfont5) //,100)
	oPrn:Say(nLin,ini+2750,transform(_mItens[i,10],"@E 99.99"),mfont5) //,100) 
	oPrn:Say(nLin,ini+2890,_mItens[i,11],mfont5) //,100) 

	If nLin+int >= _lininf
		_folhanova := .T.
	Endif
next i
nLin := _lininf
oPrn:Box(nLin,ini+2440,nLin+(2*int),2930)
nLin := nLin + int
oPrn:Say(nLin,ini+2000,"Valor Total sem IPI",mfont5)
oPrn:Say(nLin,ini+2470,transform(_nTotal,"@E 999,999,999.99"),nfont5)

If numite > _limaior
 	nLin := nLin + int
	oPrn:Say(nLin,2800,"Continua...",mfont5,100)
	oPrn:EndPage()
	oPrn:StartPage()
	FolhaNova := .T.
	ini  := 70 //20
	nLin := 20
	int  := 50          
	contador := 0
	lim  := iif(len(_mItens)-i>15,30,15)
	ImpLogo()
	ImpCabCli()
EndiF 

Return

Static Function ImpCondi()
//************************	

if nlin+(8*int) > limfol     // 8= Condicoes e 2200 limite da folha
 	nLin := nLin + int
	oPrn:Say(nLin,2800,"Continua...",mfont5,100)
	oPrn:EndPage()
	oPrn:StartPage()
	FolhaNova := .T.
	ini  := 70 //20
	nLin := 20
	int  := 50          
	contador := 0
	ImpLogo()
	ImpCabCli()
endif
oPrn:Say(nLin,ini,"Condicoes Gerais de Fornecimento:",nFont5,100)
nLin := nLin + int
oPrn:Say(nLin,ini,"1) ICMS: ",mfont5,100)
oPrn:Say(nLin,600,_cICM+_cTxtICM+"Preco - Desconsiderar quando serviço",mfont5,100)
nLin := nLin + int 
oPrn:Say(nLin,ini,"2) Condicao de Pagamento: ",mfont5,100)
oPrn:Say(nLin,600,_cPagto,mfont5,100)
nLin := nLin + int
oPrn:Say(nLin,ini,"3) Condicao de Entrega: ",mfont5,100)
oPrn:Say(nLin,600,_cEntreg,mfont5,100)
nLin := nLin + int
oPrn:Say(nLin,ini,"4) Base de Calculo: ",mfont5,100)
oPrn:Say(nLin,600,_cBaseCa,mfont5,100)
nLin := nLin + int
oPrn:Say(nLin,ini,"5) Validade da Proposta: ",mfont5,100)
oPrn:Say(nLin,600,_cValida,mfont5,100)
nLin := nLin + int
oPrn:Say(nLin,ini,"6) Reajuste: ",mfont5,100)
oPrn:Say(nLin,600,_cReajus,mfont5,100)  
nLin := nLin + int
oPrn:Say(nLin,ini,"7) Valor Mínimo para Faturamento R$ 150,00",mfont5,100)
nLin := nLin + int
Return

Static Function ImpNotas()
//************************

num := len(_mNotas)
If  nLin+((num+1+5)*int) > limfol // 5 Rodape
	nLin := nLin + (2 * int)
	oPrn:Say(nLin,2800,"Continua...",mfont5,100)
	oPrn:EndPage()
	oPrn:StartPage()
	ini  := 70 //20
	nLin := 20
	int  := 50	
	ImpLogo()
	ImpCabCli()
Endif
oPrn:Say(nLin,ini,"Notas: ",nFont5,100)
For i:= 1 to len(_mNotas)
	oPrn:Say(nLin,ini+150,_mNotas[i],mfont5,400)
	nLin := nLin + int
Next i
nLin := nLin + int
Return

Static Function ImpRoda()
//***********************

oPrn:Say(nLin,ini,"DFC:",mfont5,100)
oPrn:Say(nLin,ini+220,"[] Vivian Souza",mfont5,100)
oPrn:Say(nLin,ini+750,"4176-4006",mfont5,100)
oPrn:Say(nLin,ini+1140,"vsouza@selcoved.com.br",mfont5,100)
oPrn:Say(nLin,ini+2250,"Atenciosamente,",mfont5,100)
nLin := nLin + int
oPrn:Say(nLin,ini+220,"[] Eni Fonseca",mfont5,100)
oPrn:Say(nLin,ini+750,"4176-4003",mfont5,100)
oPrn:Say(nLin,ini+1140,"efonseca@selcoved.com.br",mfont5,100)
nLin := nLin + int
oPrn:Say(nLin,ini+220,"[] Graca Nunes",mfont5,100)
oPrn:Say(nLin,ini+750,"4176-4004",mfont5,100)
oPrn:Say(nLin,ini+1140,"gnunes@selcoved.com.br",mfont5,100)
nLin := nLin + int
oPrn:Say(nLin,ini+220,"[] Ana Carmen",mfont5,100)
oPrn:Say(nLin,ini+750,"4176-4005",mfont5,100)
oPrn:Say(nLin,ini+1140,"Avieck@selcoved.com.br",mfont5,100)
oPrn:Say(nLin,ini+2100,"Selco Vedacoes Dinamicas Ltda",nFont5,100)

Return

Static Function fParOrc()
****************
//-- Inicializa Variaveis
aRegs     := {}
nSX1Order := SX1->(IndexOrd())
nSX1Recno := SX1->(Recno())
lRet      := .F.

SX1->(dbSetOrder(1))

// Grupo/Ordem/Pergunt/PerSpa/PerEng/Variavl/Tipo/Tamanho/Decimal/Presel/GSC/Valid/Var01/Def01/DefSpa1/DefEng1/Cnt01/Var02/Def02/DefSpa2/DefEng2/Cnt02/Var03/Def03/DefSpa3/DefEng3/Cnt03/Var04/Def04/DefSpa4/DefEng4/Cnt04/Var05/Def05/DefSpa5/DefEng5/Cnt05/XF3/GprSxg
aAdd(aRegs,{cPerg,'01', 'Tipo Orcamento   ?','','', 'mv_ch1', 'N', 001, 0, 0, 'C', '', 'mv_par01', 'Aut.', '', '', '', '', 'Ved.', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',''})
aAdd(aRegs,{cPerg,'02', 'Tipo Frete       ?','','', 'mv_ch2', 'N', 001, 0, 0, 'C', '', 'mv_par02', 'FOB-N/CARRO', '', '', '', '', 'CIF-TRANSP.', '', '', '', '', 'CIF-DESTINO', '', '', '', '', '', '', '', '', '', '', '', '', '', 'SA1',''})
aAdd(aRegs,{cPerg,'03', 'Base de Calculo  ?','','', 'mv_ch3', 'C', 006, 0, 0, 'G', '', 'mv_par03', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' ,''})
aAdd(aRegs,{cPerg,'04', 'Data Apres.(VED) ?','','', 'mv_ch4', 'D', 008, 0, 0, 'G', '', 'mv_par04', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' ,''})
aAdd(aRegs,{cPerg,'05', 'Dias de Validade ?','','', 'mv_ch5', 'N', 003, 0, 0, 'G', '', 'mv_par05', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' ,''})
aAdd(aRegs,{cPerg,'09', 'Lista IPI        ?','','', 'mv_ch9', 'C', 001, 0, 0, 'C', '', 'mv_par09', 'Sim', '', '', '', '', 'Nao', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',''})

* ...
For nX := 1 to Len(aRegs)
    if !SX1->(dbSeek(cPerg + aRegs[nX,2], .F.))
       lRet := .T.
       RecLock('SX1',.T.)
       For nY:=1 to fCount()
	   If nY <= Len(aRegs[nX])
	      SX1->(FieldPut(nY,aRegs[nX,nY]))
	   Endif
       Next nY
       MsUnlock()
    Endif
Next nX

SX1->(dbSetOrder(nSX1Order))
SX1->(dbGoto(nSX1Recno))

Return lRet

